<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DevUtils.test</name>
    </assembly>
    <members>
        <member name="T:DevUtils.test.DateTimeExtensions.BaseDateTimeExtensions">
            <summary>
            BaseDateTimeExtensions test class
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.BaseDateTimeExtensions.GetTimezoneInfoDictionary">
            <summary>
            Test method GetTimezoneInfoDictionary
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.BaseDateTimeExtensions.GetTimezoneInfo">
            <summary>
            Test method GetTimezoneInfo
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.BaseDateTimeExtensions.GetAndSet_DefaultBusinessDays">
            <summary>
            Test methods GetDefaultBusinessDays and SetDefaultBusinessDays
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.BaseDateTimeExtensions.GetAndSet_FirstDays">
            <summary>
            Test methods GetDefaultFirstWeekDay, GetDefaultFirstWeekBusinessDay and SetDefaultFirstDay
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.BaseDateTimeExtensions.GetAndSet_LastDays">
            <summary>
            Test methods GetDefaultLastWeekDay, GetDefaultLastWeekBusinessDay and SetDefaultLastDay
            </summary>
        </member>
        <member name="T:DevUtils.test.DateTimeExtensions.Offset">
            <summary>
            Offset test class
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Offset.GetDateTimeOffsetMinutes_DateAndTimezoneInfo">
            <summary>
            Test method GetDateTimeOffsetMinutes with date and timezone info
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Offset.GetDateTimeOffsetMinutes_DateAndTimezoneName">
            <summary>
            Test method GetDateTimeOffsetMinutes with date and timexone name
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Offset.GetDateTimeOffsetMinutes_DateOnly">
            <summary>
            Test method GetDateTimeOffsetMinutes with date only
            </summary>
        </member>
        <member name="T:DevUtils.test.DateTimeExtensions.Utils.AddAndRemoveBusinessDays">
            <summary>
            Add adn remove business days test class
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Utils.AddAndRemoveBusinessDays.AddBusinessDaysAndOverloads">
            <summary>
            Test method AddBusinessDays and overloads
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Utils.AddAndRemoveBusinessDays.RemoveBusinessDaysAndOverloads">
            <summary>
            Test method RemoveBusinessDays and overloads
            </summary>
        </member>
        <member name="T:DevUtils.test.DateTimeExtensions.Utils.EndOfMonthAndBusinessMonth">
            <summary>
            End of mopnth and end of business month test class
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Utils.EndOfMonthAndBusinessMonth.EndOfMonth">
            <summary>
            Test method EndOfMonth and overloads
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Utils.EndOfMonthAndBusinessMonth.EndOfBusinessMonth_UseDateAndBusinessDays">
            <summary>
            Test method EndOfBusinessMonth sending date and business days
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Utils.EndOfMonthAndBusinessMonth.EndOfBusinessMonth_UseDateAndDontSendBusiness">
            <summary>
            Test method EndOfBusinessMonth sending only date
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Utils.EndOfMonthAndBusinessMonth.EndOfBusinessMonth_UseYearAndBusinessDays">
            <summary>
            Test method EndOfBusinessMonth sending year, month and business days
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Utils.EndOfMonthAndBusinessMonth.EndOfBusinessMonth_UseYearAndDontSendBusiness">
            <summary>
            Test method EndOfBusinessMonth sending only year and month
            </summary>
        </member>
        <member name="T:DevUtils.test.DateTimeExtensions.Utils.SetTime">
            <summary>
            SetTime test class
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Utils.SetTime.SetHour">
            <summary>
            Test method SetHour
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Utils.SetTime.SetMinute">
            <summary>
            Test method SetMinute
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Utils.SetTime.SetSecond">
            <summary>
            Test method SetSecond
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Utils.SetTime.SetMillisecond">
            <summary>
            Test method SetMillisecond
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Utils.SetTime.SetHourAndMinute">
            <summary>
            Test method SetTime with hour and minute only
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Utils.SetTime.SetHourMinuteAndSecond">
            <summary>
            Test method SetTime with hour, minute and second only
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Utils.SetTime.SetAllTime">
            <summary>
            Test method SetTime with all params
            </summary>
        </member>
        <member name="T:DevUtils.test.DateTimeExtensions.Utils.SetDate">
            <summary>
            SetDate test class
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Utils.SetDate.SetDay">
            <summary>
            Test method SetDay
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Utils.SetDate.SetMonth">
            <summary>
            Test method SetMonth
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Utils.SetDate.SetYear">
            <summary>
            Test method SetYear
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Utils.SetDate.SetAllDate">
            <summary>
            Test method SetDate with all params
            </summary>
        </member>
        <member name="T:DevUtils.test.DateTimeExtensions.Utils.StartOfMonthAndBusinessMonth">
            <summary>
            Start of month and start of business month test class
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Utils.StartOfMonthAndBusinessMonth.StartOfMonth">
            <summary>
            Test method StartOfMonth and overloads
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Utils.StartOfMonthAndBusinessMonth.StartOfBusinessMonth_UseDateAndBusinessDays">
            <summary>
            Test method StartOfBusinessMonth sending date and business days
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Utils.StartOfMonthAndBusinessMonth.StartOfBusinessMonth_UseDateAndDontSendBusiness">
            <summary>
            Test method StartOfBusinessMonth sending only date
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Utils.StartOfMonthAndBusinessMonth.StartOfBusinessMonth_UseYearMonthAndBusinessDays">
            <summary>
            Test method StartOfBusinessMonth sending year, month and business days
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Utils.StartOfMonthAndBusinessMonth.StartOfBusinessMonth_UseYearMonthAndDontSendBusiness">
            <summary>
            Test method StartOfBusinessMonth sending only year
            </summary>
        </member>
        <member name="T:DevUtils.test.DateTimeExtensions.Utils.EndOfWeekAndBusinessWeek">
            <summary>
            End of week and end of business week test class
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Utils.EndOfWeekAndBusinessWeek.EndOfWeek_SendDateAndLastWeekDay">
            <summary>
            Test method EndOfWeek sending date and last week day
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Utils.EndOfWeekAndBusinessWeek.EndOfWeek_SendDate">
            <summary>
            Test method EndOfWeek sending date and dont send last week day
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Utils.EndOfWeekAndBusinessWeek.EndOfBusinessWeek_SendDateAndLastWeekDay">
            <summary>
            Test method EndOfBusinessWeek sending date and last business week day
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Utils.EndOfWeekAndBusinessWeek.EndOfBusinessWeek_SendDate">
            <summary>
            Test method EndOfBusinessWeek sending date and dont send last week day
            </summary>
        </member>
        <member name="T:DevUtils.test.DateTimeExtensions.Utils.StartOfWeekAndBusinessWeek">
            <summary>
            Start of week and start of business week test class
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Utils.StartOfWeekAndBusinessWeek.StartOfWeek_SendDateAndFirstWeekDay">
            <summary>
            Test method StartOfWeek sending date and first week day
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Utils.StartOfWeekAndBusinessWeek.StartOfWeek_SendDate">
            <summary>
            Test method StartOfWeek sending date and dont send first week day
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Utils.StartOfWeekAndBusinessWeek.StartOfBusinessWeek_SendDateAndFirstWeekDay">
            <summary>
            Test method StartOfBusinessWeek sending date and first business week day
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Utils.StartOfWeekAndBusinessWeek.StartOfBusinessWeek_SendDate">
            <summary>
            Test method StartOfBusinessWeek sending date and dont send first week day
            </summary>
        </member>
        <member name="T:DevUtils.test.DateTimeExtensions.Utils.StartOfYearAndBusinessYear">
            <summary>
            Start of year and start of business year test class
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Utils.StartOfYearAndBusinessYear.StartOfYear">
            <summary>
            Test method StartOfYear and overloads
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Utils.StartOfYearAndBusinessYear.StartOfBusinessYear_UseDateAndBusinessDays">
            <summary>
            Test method StartOfBusinessYear sending date and business days
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Utils.StartOfYearAndBusinessYear.StartOfBusinessYear_UseDateAndDontSendBusiness">
            <summary>
            Test method StartOfBusinessYear sending only date
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Utils.StartOfYearAndBusinessYear.StartOfBusinessYear_UseYearAndBusinessDays">
            <summary>
            Test method StartOfBusinessYear sending year and business days
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Utils.StartOfYearAndBusinessYear.StartOfBusinessYear_UseYearAndDontSendBusiness">
            <summary>
            Test method StartOfBusinessYear sending only year
            </summary>
        </member>
        <member name="T:DevUtils.test.DateTimeExtensions.Utils.EndOfYearAndBusinessYear">
            <summary>
            End of year and end of business year test class
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Utils.EndOfYearAndBusinessYear.EndOfYear">
            <summary>
            Test method EndOfYear and overloads
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Utils.EndOfYearAndBusinessYear.EndOfBusinessYear_UseDateAndBusinessDays">
            <summary>
            Test method EndOfBusinessYear sending date and business days
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Utils.EndOfYearAndBusinessYear.EndOfBusinessYear_UseDateAndDontSendBusiness">
            <summary>
            Test method EndOfBusinessYear sending only date
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Utils.EndOfYearAndBusinessYear.EndOfBusinessYear_UseYearAndBusinessDays">
            <summary>
            Test method EndOfBusinessYear sending year and business days
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Utils.EndOfYearAndBusinessYear.StartOfBusinessYear_UseYearAndDontSendBusiness">
            <summary>
            Test method EndOfBusinessYear sending only year
            </summary>
        </member>
        <member name="T:DevUtils.test.DateTimeExtensions.Utils.StartAndEndOfDay">
            <summary>
            StartOfDay and EndOfDay test class
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Utils.StartAndEndOfDay.StartOfDay">
            <summary>
            Test method StartOfDay
            </summary>
        </member>
        <member name="M:DevUtils.test.DateTimeExtensions.Utils.StartAndEndOfDay.EndOfDay">
            <summary>
            Test method EndOfDay
            </summary>
        </member>
        <member name="T:DevUtils.test.Hash.Base64">
            <summary>
            Base64 test class
            </summary>
        </member>
        <member name="M:DevUtils.test.Hash.Base64.Base64_Create">
            <summary>
            Test ToBase64 method
            </summary>
        </member>
        <member name="M:DevUtils.test.Hash.Base64.Base64_Revert">
            <summary>
            Test FromBase64 method
            </summary>
        </member>
        <member name="T:DevUtils.test.Hash.Md5">
            <summary>
            Md5 test class
            </summary>
        </member>
        <member name="M:DevUtils.test.Hash.Md5.Md5_Create">
            <summary>
            Test ToMd5 method
            </summary>
        </member>
        <member name="T:DevUtils.test.Hash.Randon">
            <summary>
            Randon test class
            </summary>
        </member>
        <member name="M:DevUtils.test.Hash.Randon.CreateRandonHash">
            <summary>
            Test CreateRandonHash method
            </summary>
        </member>
        <member name="T:DevUtils.test.Hash.Sha256">
            <summary>
            Sha256 test class
            </summary>
        </member>
        <member name="M:DevUtils.test.Hash.Sha256.Sha256_Create">
            <summary>
            Test ToSha256 method
            </summary>
        </member>
        <member name="T:DevUtils.test.PrimitivesExtensions.BoolExtensions">
            <summary>
            Test class BoolExtensions
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.BoolExtensions.TryParseBool">
            <summary>
            Teste method TryParseBool and overload
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.BoolExtensions.TryParseBoolArray">
            <summary>
            Teste method TryParseBoolArray and overload
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.BoolExtensions.IsValidBool">
            <summary>
            Teste method IsValidBool
            </summary>
        </member>
        <member name="T:DevUtils.test.PrimitivesExtensions.ByteExtensions">
            <summary>
            Test class ByteExtensions
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.ByteExtensions.#ctor">
            <summary>
            Test constructor
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.ByteExtensions.TryParseByte_FromString">
            <summary>
            Test TryParseByte method from string value
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.ByteExtensions.TryParseByte_NullableByte">
            <summary>
            Test TryParseByte method from nullable byte value
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.ByteExtensions.TryParseByte_FromShortAndNullableShort">
            <summary>
            Test TryParseByte method from short and nullable short values
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.ByteExtensions.TryParseByte_FromIntAndNullableInt">
            <summary>
            Test TryParseByte method from int and nullable int values
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.ByteExtensions.TryParseByte_FromLongAndNullableLong">
            <summary>
            Test TryParseByte method from long and nullable long values
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.ByteExtensions.TryParseByte_FromDecimalAndNullableDecimal">
            <summary>
            Test TryParseByte method from decimal and nullable decimal values
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.ByteExtensions.TryParseByte_FromDoubleAndNullableDouble">
            <summary>
            Test TryParseByte method from double and nullable double values
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.ByteExtensions.TryParseByte_FromFloatAndNullableFloat">
            <summary>
            Test TryParseByte method from float and nullable float values
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.ByteExtensions.TryParseByteArray">
            <summary>
            Teste method TryParseByteArray and overload
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.ByteExtensions.IsValidByte">
            <summary>
            Teste method IsValidByte and overloads
            </summary>
        </member>
        <member name="T:DevUtils.test.PrimitivesExtensions.DecimalExtensions">
            <summary>
            Test class DecimalExtensions
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.DecimalExtensions.#ctor">
            <summary>
            Test constructor
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.DecimalExtensions.TryParseDecimal_FromString">
            <summary>
            Test TryParseDecimal method from string value
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.DecimalExtensions.TryParseDecimal_NullableDecimal">
            <summary>
            Test TryParseDecimal method from nullable decimal value
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.DecimalExtensions.TryParseDecimal_FromByteAndNullableByte">
            <summary>
            Test TryParseDecimal method from byte and nullable byte values
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.DecimalExtensions.TryParseDecimal_FromShortAndNullableShort">
            <summary>
            Test TryParseDecimal method from short and nullable short values
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.DecimalExtensions.TryParseDecimal_FromLongAndNullableLong">
            <summary>
            Test TryParseDecimal method from long and nullable long values
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.DecimalExtensions.TryParseDecimal_FromIntAndNullableInt">
            <summary>
            Test TryParseDecimal method from decimal and nullable decimal values
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.DecimalExtensions.TryParseDecimal_FromDoubleAndNullableDouble">
            <summary>
            Test TryParseDecimal method from double and nullable double values
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.DecimalExtensions.TryParseDecimal_FromFloatAndNullableFloat">
            <summary>
            Test TryParseDecimal method from float and nullable float values
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.DecimalExtensions.TryParseDecimalArray">
            <summary>
            Teste method TryParseDecimalArray and overload
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.DecimalExtensions.IsValidDecimal">
            <summary>
            Teste method IsValidDecimal and overload
            </summary>
        </member>
        <member name="T:DevUtils.test.PrimitivesExtensions.DoubleExtensions">
            <summary>
            Test class DoubleExtensions
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.DoubleExtensions.#ctor">
            <summary>
            Test constructor
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.DoubleExtensions.TryParseDouble_FromString">
            <summary>
            Test TryParseDouble method from string value
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.DoubleExtensions.TryParseDouble_NullableDouble">
            <summary>
            Test TryParseDouble method from nullable double value
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.DoubleExtensions.TryParseDouble_FromByteAndNullableByte">
            <summary>
            Test TryParseDouble method from byte and nullable byte values
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.DoubleExtensions.TryParseDouble_FromShortAndNullableShort">
            <summary>
            Test TryParseDouble method from short and nullable short values
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.DoubleExtensions.TryParseDouble_FromLongAndNullableLong">
            <summary>
            Test TryParseDouble method from long and nullable long values
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.DoubleExtensions.TryParseDouble_FromIntAndNullableInt">
            <summary>
            Test TryParseDouble method from double and nullable double values
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.DoubleExtensions.TryParseDouble_FromDecimalAndNullableDecimal">
            <summary>
            Test TryParseDouble method from double and nullable double values
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.DoubleExtensions.TryParseDouble_FromFloatAndNullableFloat">
            <summary>
            Test TryParseDouble method from float and nullable float values
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.DoubleExtensions.TryParseDoubleArray">
            <summary>
            Teste method TryParseDoubleArray and overload
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.DoubleExtensions.IsValidDouble">
            <summary>
            Teste method IsValidDouble and overload
            </summary>
        </member>
        <member name="T:DevUtils.test.PrimitivesExtensions.FloatExtensions">
            <summary>
            Test class FloatExtensions
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.FloatExtensions.#ctor">
            <summary>
            Test constructor
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.FloatExtensions.TryParseFloat_FromString">
            <summary>
            Test TryParseFloat method from string value
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.FloatExtensions.TryParseFloat_NullableFloat">
            <summary>
            Test TryParseFloat method from nullable float value
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.FloatExtensions.TryParseFloat_FromByteAndNullableByte">
            <summary>
            Test TryParseFloat method from byte and nullable byte values
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.FloatExtensions.TryParseFloat_FromShortAndNullableShort">
            <summary>
            Test TryParseFloat method from short and nullable short values
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.FloatExtensions.TryParseFloat_FromLongAndNullableLong">
            <summary>
            Test TryParseFloat method from long and nullable long values
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.FloatExtensions.TryParseFloat_FromIntAndNullableInt">
            <summary>
            Test TryParseFloat method from float and nullable float values
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.FloatExtensions.TryParseFloat_FromDoubleAndNullableDouble">
            <summary>
            Test TryParseFloat method from double and nullable double values
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.FloatExtensions.TryParseFloat_FromDecimalAndNullableDecimal">
            <summary>
            Test TryParseFloat method from decimal and nullable decimal values
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.FloatExtensions.TryParseFloatArray">
            <summary>
            Teste method TryParseFloatArray and overload
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.FloatExtensions.IsValidFloat">
            <summary>
            Teste method IsValidFloat and overload
            </summary>
        </member>
        <member name="T:DevUtils.test.PrimitivesExtensions.IntExtensions">
            <summary>
            Test class IntExtensions
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.IntExtensions.#ctor">
            <summary>
            Test constructor
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.IntExtensions.TryParseInt_FromString">
            <summary>
            Test TryParseInt method from string value
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.IntExtensions.TryParseInt_NullableInt">
            <summary>
            Test TryParseInt method from nullable int value
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.IntExtensions.TryParseInt_FromByteAndNullableByte">
            <summary>
            Test TryParseInt method from byte and nullable byte values
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.IntExtensions.TryParseInt_FromShortAndNullableShort">
            <summary>
            Test TryParseInt method from short and nullable short values
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.IntExtensions.TryParseInt_FromLongAndNullableLong">
            <summary>
            Test TryParseInt method from long and nullable long values
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.IntExtensions.TryParseInt_FromDecimalAndNullableDecimal">
            <summary>
            Test TryParseInt method from decimal and nullable decimal values
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.IntExtensions.TryParseInt_FromDoubleAndNullableDouble">
            <summary>
            Test TryParseInt method from double and nullable double values
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.IntExtensions.TryParseInt_FromFloatAndNullableFloat">
            <summary>
            Test TryParseInt method from float and nullable float values
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.IntExtensions.TryParseIntArray">
            <summary>
            Teste method TryParseIntArray and overload
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.IntExtensions.IsValidInt">
            <summary>
            Teste method IsValidInt and overloads
            </summary>
        </member>
        <member name="T:DevUtils.test.PrimitivesExtensions.LongExtensions">
            <summary>
            Test class LongExtensions
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.LongExtensions.#ctor">
            <summary>
            Test constructor
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.LongExtensions.TryParseLong_FromString">
            <summary>
            Test TryParseLong method from string value
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.LongExtensions.TryParseLong_NullableLong">
            <summary>
            Test TryParseLong method from nullable long value
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.LongExtensions.TryParseLong_FromByteAndNullableByte">
            <summary>
            Test TryParseLong method from byte and nullable byte values
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.LongExtensions.TryParseLong_FromShortAndNullableShort">
            <summary>
            Test TryParseLong method from short and nullable short values
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.LongExtensions.TryParseLong_FromIntAndNullableInt">
            <summary>
            Test TryParseLong method from int and nullable int values
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.LongExtensions.TryParseLong_FromDecimalAndNullableDecimal">
            <summary>
            Test TryParseLong method from decimal and nullable decimal values
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.LongExtensions.TryParseLong_FromDoubleAndNullableDouble">
            <summary>
            Test TryParseLong method from double and nullable double values
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.LongExtensions.TryParseLong_FromFloatAndNullableFloat">
            <summary>
            Test TryParseLong method from float and nullable float values
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.LongExtensions.TryParseLongArray">
            <summary>
            Teste method TryParseLongArray and overload
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.LongExtensions.IsValidLong">
            <summary>
            Teste method IsValidLong and overload
            </summary>
        </member>
        <member name="T:DevUtils.test.PrimitivesExtensions.ShortExtensions">
            <summary>
            Test class ShortExtensions
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.ShortExtensions.#ctor">
            <summary>
            Test constructor
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.ShortExtensions.TryParseShort_FromString">
            <summary>
            Test TryParseShort method from string value
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.ShortExtensions.TryParseShort_NullableShort">
            <summary>
            Test TryParseShort method from nullable short value
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.ShortExtensions.TryParseShort_FromByteAndNullableByte">
            <summary>
            Test TryParseShort method from short and nullable short values
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.ShortExtensions.TryParseShort_FromIntAndNullableInt">
            <summary>
            Test TryParseShort method from int and nullable int values
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.ShortExtensions.TryParseShort_FromLongAndNullableLong">
            <summary>
            Test TryParseShort method from long and nullable long values
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.ShortExtensions.TryParseShort_FromDecimalAndNullableDecimal">
            <summary>
            Test TryParseShort method from decimal and nullable decimal values
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.ShortExtensions.TryParseShort_FromDoubleAndNullableDouble">
            <summary>
            Test TryParseShort method from double and nullable double values
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.ShortExtensions.TryParseShort_FromFloatAndNullableFloat">
            <summary>
            Test TryParseShort method from float and nullable float values
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.ShortExtensions.TryParseShortArray">
            <summary>
            Teste method TryParseShortArray and overload
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.ShortExtensions.IsValidShort">
            <summary>
            Teste method IsValidShort and overload
            </summary>
        </member>
        <member name="T:DevUtils.test.PrimitivesExtensions.StringExtensions">
            <summary>
            StringExtensions test class
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.StringExtensions.ToUnicode">
            <summary>
            Test method ToUnicode
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.StringExtensions.ToUnicodeWithoutSpaces">
            <summary>
            Test method ToUnicodeWithoutSpace
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.StringExtensions.Left">
            <summary>
            Test method Left
            </summary>
        </member>
        <member name="M:DevUtils.test.PrimitivesExtensions.StringExtensions.Right">
            <summary>
            Test method Right
            </summary>
        </member>
        <member name="T:DevUtils.test.Validators.Email">
            <summary>
            Email validator test class
            </summary>
        </member>
        <member name="M:DevUtils.test.Validators.Email.IsEmailValid">
            <summary>
            Test IsEmailValid method
            </summary>
        </member>
        <member name="T:DevUtils.test.Validators.Uri">
            <summary>
            Uri validator class
            </summary>
        </member>
        <member name="M:DevUtils.test.Validators.Uri.IsUriValid">
            <summary>
            Test IsUriValid method
            </summary>
        </member>
    </members>
</doc>
